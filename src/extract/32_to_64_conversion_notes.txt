Conversion Notes

General Idea:

Replace most primitives with declarations from STDINT.H

Identify the variables types that don't convert well between the two architectures:

Direct variable type conversion chart:
	- short	-> 	int16_t
	- int 	->	int32_t
	- long	->	int32_t
	
Other conversions:
	- sizeof(unsigned long) ->	sizeof(int32_t)  <-- valid  because the two types have the same size in bits

fprintf issues:
	- fprintf %d cuts off input at 16 bits buts we are using a 32bit type, which causes problems on the 64bit systems,
		so when appropriate the %d is replaced with %ld, a preprocessor flag is used to determine the architecture and generate the appopriate format string for fprintf

Consulted websites:
	* Here is a good (lengthy) write up that addresses a lot of the issues realted to porting 32 to 64 bit
		-http://www.ibm.com/developerworks/library/l-port64/index.html

	* Good Stackoverflow Question:
		-http://stackoverflow.com/questions/411798/converting-32-bit-application-into-64-bit-application-in-c

Variable sizes determined with a call to:  sizeof(TYPE). Compiled with G++ under Ubuntu 12.04 i686 and AMD_64

___32 bit___|___64 bit___
char:	1	|	char:	1
short:	2 	|	short:	2
int:	4 	|	int:	4
long:	4 	|	long:	8
float:	4 	|	float:	4
double:	8 	|	double:	8

